"""Initial migration

Revision ID: 36b7c5cebf4d
Revises: 
Create Date: 2025-05-22 23:13:59.157909

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36b7c5cebf4d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurrence_pattern', sa.JSON(), nullable=True),
    sa.Column('current_version', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_event_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event'))
    )
    op.create_index('ix_event_date_range', 'event', ['start_time', 'end_time'], unique=False)
    op.create_index(op.f('ix_event_end_time'), 'event', ['end_time'], unique=False)
    op.create_index(op.f('ix_event_id'), 'event', ['id'], unique=False)
    op.create_index('ix_event_owner_dates', 'event', ['owner_id', 'start_time', 'end_time'], unique=False)
    op.create_index(op.f('ix_event_start_time'), 'event', ['start_time'], unique=False)
    op.create_table('eventpermission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('OWNER', 'EDITOR', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_eventpermission_event_id_event'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_eventpermission_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_eventpermission')),
    sa.UniqueConstraint('event_id', 'user_id', name='uq_event_user_permission')
    )
    op.create_index(op.f('ix_eventpermission_id'), 'eventpermission', ['id'], unique=False)
    op.create_table('eventversion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('changed_by_id', sa.Integer(), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=False),
    sa.Column('change_description', sa.String(length=500), nullable=True),
    sa.Column('client_timestamp', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['user.id'], name=op.f('fk_eventversion_changed_by_id_user')),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], name=op.f('fk_eventversion_event_id_event'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_eventversion')),
    sa.UniqueConstraint('event_id', 'version_number', name='uq_event_version_number')
    )
    op.create_index(op.f('ix_eventversion_id'), 'eventversion', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_eventversion_id'), table_name='eventversion')
    op.drop_table('eventversion')
    op.drop_index(op.f('ix_eventpermission_id'), table_name='eventpermission')
    op.drop_table('eventpermission')
    op.drop_index(op.f('ix_event_start_time'), table_name='event')
    op.drop_index('ix_event_owner_dates', table_name='event')
    op.drop_index(op.f('ix_event_id'), table_name='event')
    op.drop_index(op.f('ix_event_end_time'), table_name='event')
    op.drop_index('ix_event_date_range', table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
